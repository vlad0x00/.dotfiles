#!/usr/bin/env python3

import subprocess as sub
import time
import os
import signal

NAGBAR_PID_FILEPATH = '/tmp/yabar_battery_nagbar_pid'
BATTERY_LOW_MSG = 'BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW BATTERY LOW'
NAGBAR_LINES = 5

def get_batteries():
  p = sub.run(['acpi', '-ab'], capture_output=True)
  acpi_stdout = p.stdout.decode('utf-8')
  acpi_stderr = p.stderr.decode('utf-8')

  lines = acpi_stdout.split('\n')
  
  adapters = filter(lambda l : l.startswith('Adapter'), lines)
  batteries = filter(lambda l : l.startswith('Battery'), lines)

  output = ''
  for i, battery in enumerate(batteries):
    if battery == '': continue

    tokens = battery.split(',')

    percent = int(tokens[1][1:-1])
    if 'Charging' in battery or any([ 'on-line' in adapter for adapter in adapters ]):
      icon = ''
    else:
      if percent > 87:
        icon = ''
      elif percent > 62:
        icon = ''
      elif percent > 37:
        icon = ''
      elif percent > 12:
        icon = ''
      else:
        icon = ''

    if percent <= 6:
      if percent <= 3:
        if percent > 0: os.system('poweroff')
      elif not os.path.isfile(NAGBAR_PID_FILEPATH):
        with open(NAGBAR_PID_FILEPATH, 'w') as f:
          for _ in range(NAGBAR_LINES):
            nagbar_process = sub.Popen(['i3-nagbar', '-m', BATTERY_LOW_MSG], close_fds=True)
            f.write(str(nagbar_process.pid))
            f.write('\n')
    else:
      if os.path.isfile(NAGBAR_PID_FILEPATH):
        with open(NAGBAR_PID_FILEPATH, 'r') as f:
          for line in f:
            os.kill(int(line), signal.SIGTERM)
        os.remove(NAGBAR_PID_FILEPATH)

    percent = str(percent) + '%'

    if len(tokens) > 2 and ':' in tokens[2]:
      remaining = '(' + tokens[2].split(' ')[1][:-3] + ')'
    else:
      remaining = '(--:--)'

    if i > 0: output += ' '
    output += (icon + ' ' + percent + ' ' + remaining)

  return output

print(get_batteries(), end='')
